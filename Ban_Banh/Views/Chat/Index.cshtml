@{
    ViewData["Title"] = "AI Chat";
}
<style>
  .chat-wrap{max-width:900px;margin:20px auto;background:#111218;color:#eaecef;border:1px solid #1e2230;border-radius:12px;box-shadow:0 10px 30px rgba(0,0,0,.25)}
  .chat-head{padding:12px 16px;border-bottom:1px solid #1e2230;display:flex;align-items:center;gap:10px}
  .chat-body{padding:12px;display:flex;flex-direction:column;gap:10px;height:60vh;overflow:auto}
  .msg{display:flex;gap:8px}
  .role{width:26px;height:26px;border-radius:50%;display:grid;place-items:center;background:#1b2a4a}
  .assistant .role{background:#17361e}
  .bubble{flex:1;padding:10px 12px;border:1px solid #1d2232;background:#0f1118;border-radius:10px;white-space:pre-wrap}
  .chat-foot{display:flex;gap:8px;padding:12px;border-top:1px solid #1e2230}
  .chat-foot input{flex:1;padding:10px 12px;border-radius:8px;border:1px solid #1e2230;background:#0b0e16;color:#eaecef}
  .chat-foot button{padding:0 14px;border:none;border-radius:8px;background:#5b9cff;color:#fff;font-weight:600}
</style>

<div class="chat-wrap">
  <div class="chat-head"><strong>AI Chat</strong><span style="background:#192032;color:#8fb0ff;border-radius:999px;padding:2px 8px;font-size:12px">ASP.NET MVC</span></div>
  <div id="chat" class="chat-body"></div>
  <div class="chat-foot">
    <input id="inp" type="text" placeholder="Nh·∫≠p c√¢u h·ªèi..." />
    <button id="btn">G·ª≠i</button>
  </div>
</div>

<script>
  const chat = document.getElementById('chat');
  const inp = document.getElementById('inp');
  const btn = document.getElementById('btn');
  const messages = [
    { role:'system', content:'B·∫°n l√† tr·ª£ l√Ω h·ªØu √≠ch, tr·∫£ l·ªùi ng·∫Øn g·ªçn.'},
    { role:'assistant', content:'Xin ch√†o! H√£y h·ªèi m√¨nh b·∫•t c·ª© ƒëi·ªÅu g√¨ üëã'}
  ];

  function addMsg(role, content){
    const row = document.createElement('div');
    row.className = 'msg ' + role;
    row.innerHTML = '<div class="role">'+ (role==='user'?'U':'A') +'</div><div class="bubble"></div>';
    row.querySelector('.bubble').textContent = content;
    chat.appendChild(row);
    chat.scrollTop = chat.scrollHeight;
  }

  function renderAll(){
    chat.innerHTML='';
    for(const m of messages){
      addMsg(m.role==='assistant'?'assistant':'user', m.content);
    }
  }
  renderAll();

  async function send(){
    const content = inp.value.trim();
    if(!content) return;
    messages.push({ role:'user', content });
    inp.value='';
    addMsg('user', content);

    try {
      const r = await fetch('/api/chat', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify({ messages })
      });
      if(!r.ok){
        const t = await r.text();
        addMsg('assistant', 'L·ªói: '+t);
        return;
      }
      const data = await r.json();
      const reply = data.reply || '(Kh√¥ng c√≥ ph·∫£n h·ªìi)';
      messages.push({ role:'assistant', content: reply });
      addMsg('assistant', reply);
    } catch(e){
      addMsg('assistant', 'L·ªói: '+ e);
    }
  }

  btn.addEventListener('click', send);
  inp.addEventListener('keydown', e => { if(e.key==='Enter') send(); });
</script>
